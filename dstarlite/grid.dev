

<!DOCTYPE html>
<html lang="en">
	<head>
		
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
		<meta name="description" content="A 3D game engine written in Go!">
		<meta name="author" content="The Azul3D Authors">
		<title>Azul3D</title>
		<link rel="shortcut icon" href="/content/favicon.png"> 

		
		<link rel="stylesheet" type="text/css" href="/content/reset.css">

		
		<link href='http://fonts.googleapis.com/css?family=Audiowide' rel='stylesheet' type='text/css'>
		<link href='http://fonts.googleapis.com/css?family=Cutive+Mono' rel='stylesheet' type='text/css'>

		
		<link href='/content/dejavusans_book/stylesheet.css' rel='stylesheet' type='text/css'>

		
		<link href='/content/brandico/brandico.css' rel='stylesheet' type='text/css'>

		
		

		
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

		
		<link rel="stylesheet" type="text/css" href="/content/stylesheet.css">
		<link rel="stylesheet" type="text/css" href="/content/mq.css">
	</head>
	<body>


<div id="top"></div>




































<div id="toparea">
	<div id="logo">
		<a href="/"><span class="biohazard">☣</span>
		<span>Azul3D</span></a>
	</div>

	<div id="shortbar">
		<a href="https://github.com/azul3d" target="_blank"><i class="icon-github menuIcon"></i><div class="title">GitHub</div></a>
		<a href="https://twitter.com/hashtag/azul3d" target="_blank"><i class="icon-twitter-bird menuIcon"></i><div class="title">Twitter</div></a>
		<a href="https://www.facebook.com/pages/Azul3D/651643168254798" target="_blank"><i class="icon-facebook menuIcon"></i><div class="title">Facebook</div></a>
		<a href="https://groups.google.com/forum/#!forum/azul3d" target="_blank" class="mail"><i class="menuIcon mailIcon">✉</i><div class="title">Mailing List</div></a>
	</div>
</div>

<div id="navigation">
	<h1>Navigation</h1>
	<span class="list">
		<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="/">Home</a></span></span>
		<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="/news">News</a></span></span>
		<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="/packages.html">Packages</a></span></span>
		<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="/doc/faq.html">FAQ</a></span></span>
	</span>
</div>


<div id="content-container">
	<div id="content" class="pkg-content">






<h1 class="hdr pkg hdr-general">Package grid</h1>
<span class="section pkg general">
	
		<p><em>In Development</em></p>
	
	<span class="pkg import">import "azul3d.org/dstarlite/grid.dev"</span>
	<span class="list">
		<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#versions">Versions</a></span></span>
		<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#overview">Overview</a></span></span>
		<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#index">Index</a></span></span>
		<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#package-files">Package Files</a></span></span>
	</span>
	
		<h2>WARNING!</h2>
		<span class="sub">
			
				<p>This version is the in-development -- <em><strong>unstable</strong></em> -- version of this package. Backwards incompatible changes will be made to this package in the future and as such <em>you should not use this version</em>! Please use the latest release <a href="/dstarlite/grid.v1">here</a>.</p>
			
		</span>
	

	
</span>



<h1 id="versions" class="hdr pkg hdr-versions"><a href="#versions" title="permalink">»</a>&nbsp;Versions <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg versions">
	
		<p>You are viewing an older version of this package (dev).</p>
	
	<p>Other versions of this package are available as follows. <em>Dev</em> is the in-development version of this package and should not generally be used (see <a href="/doc/versioning.html#development-versions">here</a> for more details).</p>
	<span class="list">
		
			
			
			
				
					<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="dstarlite/grid.v1" title="azul3d.org/dstarlite/grid.v1">v1</a> (latest version)</span></span>
				
			
		
			
			
			
				<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="dstarlite/grid.dev" title="azul3d.org/dstarlite/grid.dev">dev</a> (in development)</span></span>
			
		
	</span>
</span>



<h1 id="overview" class="hdr pkg hdr-overview"><a href="#overview" title="permalink">»</a>&nbsp;Overview <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg overview">
	<p>
Package grid implements D* Lite grid-based pathfinding.
</p>

</span>


<h1 id="index" class="hdr pkg hdr-index"><a href="#index" title="permalink">»</a>&nbsp;Index <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg index">
	<span class="list">
		
		
		
		
			<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Coord">type Coord</a></span></span>
			
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Coord.Dist">func (a Coord) Dist(b Coord) float64</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Coord.Equals">func (a Coord) Equals(b dstarlite.State) bool</a></span></span>
			
		
			<span class="item"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data">type Data</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#New">func New(width, height int, start, goal Coord) *Data</a></span></span>
			
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Cost">func (d *Data) Cost(aa, bb dstarlite.State) float64</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Dist">func (d *Data) Dist(aa, bb dstarlite.State) float64</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Get">func (d *Data) Get(pos Coord) (value float64, ok bool)</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Goal">func (d *Data) Goal() Coord</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Plan">func (d *Data) Plan() (path []Coord)</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Pred">func (d *Data) Pred(s dstarlite.State) []dstarlite.State</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Set">func (d *Data) Set(pos Coord, value float64)</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Size">func (d *Data) Size() (width, height int)</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Start">func (d *Data) Start() Coord</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.Succ">func (d *Data) Succ(s dstarlite.State) []dstarlite.State</a></span></span>
			
				<span class="item indent"><span class="biohazard">☣</span>&nbsp;&nbsp;<span class="content"><a href="#Data.UpdateStart">func (d *Data) UpdateStart(start Coord)</a></span></span>
			
		
	</span>
</span>
















	
	<h1 id="Coord" class="hdr pkg hdr-type"><a href="#Coord" title="permalink">»</a>&nbsp;type Coord <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg type">
		<pre>type Coord [2]int</pre>
		<p>
Coord represents an single grid coordinate pair [x, y]
</p>

	</span>

	
	

	
	
		
		<h1 id="Coord.Dist" class="hdr pkg hdr-method"><a href="#Coord.Dist" title="permalink">»</a>&nbsp;func (a Coord) Dist(b Coord) float64 <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (a Coord) Dist(b Coord) float64</pre>
			<p>
Dist returns manhattan distance between two coordinates
</p>

		</span>
	
		
		<h1 id="Coord.Equals" class="hdr pkg hdr-method"><a href="#Coord.Equals" title="permalink">»</a>&nbsp;func (a Coord) Equals(b dstarlite.State) bool <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (a Coord) Equals(b dstarlite.State) bool</pre>
			<p>
Implements dstarlite.State interface.
</p>

		</span>
	

	
	<h1 id="Data" class="hdr pkg hdr-type"><a href="#Data" title="permalink">»</a>&nbsp;type Data <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg type">
		<pre>type Data struct {
	// contains filtered or unexported fields
}</pre>
		<p>
Data represents an actual grid&#39;s data.
</p>

	</span>

	
	
		<h1 id="New" class="hdr pkg hdr-function"><a href="#New" title="permalink">»</a>&nbsp;func New(width, height int, start, goal Coord) *Data <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg function">
			<pre>func New(width, height int, start, goal Coord) *Data</pre>
			<p>
New returns an new grid data structure given an width and height where each
cell indicates the cost of traversal.
</p>
<p>
If the width or height are &lt;= 0; an panic will occur.
</p>
<p>
If either start or goal coordinates are outside the coordinates of the grid,
an panic will occur.
</p>

		</span>
	

	
	
		
		<h1 id="Data.Cost" class="hdr pkg hdr-method"><a href="#Data.Cost" title="permalink">»</a>&nbsp;func (d *Data) Cost(aa, bb dstarlite.State) float64 <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Cost(aa, bb dstarlite.State) float64</pre>
			<p>
Implements dstarlite.Data interface.
</p>

		</span>
	
		
		<h1 id="Data.Dist" class="hdr pkg hdr-method"><a href="#Data.Dist" title="permalink">»</a>&nbsp;func (d *Data) Dist(aa, bb dstarlite.State) float64 <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Dist(aa, bb dstarlite.State) float64</pre>
			<p>
Implements dstarlite.Data interface.
</p>

		</span>
	
		
		<h1 id="Data.Get" class="hdr pkg hdr-method"><a href="#Data.Get" title="permalink">»</a>&nbsp;func (d *Data) Get(pos Coord) (value float64, ok bool) <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Get(pos Coord) (value float64, ok bool)</pre>
			<p>
Get returns the attached interface value from the given coordinate on the
grid.
</p>
<p>
If the coordinate is outside of the grid&#39;s dimensions, ok will equal false.
</p>

		</span>
	
		
		<h1 id="Data.Goal" class="hdr pkg hdr-method"><a href="#Data.Goal" title="permalink">»</a>&nbsp;func (d *Data) Goal() Coord <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Goal() Coord</pre>
			<p>
Goal returns the goal coordinate, as it is currently.
</p>

		</span>
	
		
		<h1 id="Data.Plan" class="hdr pkg hdr-method"><a href="#Data.Plan" title="permalink">»</a>&nbsp;func (d *Data) Plan() (path []Coord) <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Plan() (path []Coord)</pre>
			<p>
Plan recomputes the lowest cost path through the map, taking into account
changes in start location and edge costs.
</p>
<p>
If no path is found, nil is returned.
</p>

		</span>
	
		
		<h1 id="Data.Pred" class="hdr pkg hdr-method"><a href="#Data.Pred" title="permalink">»</a>&nbsp;func (d *Data) Pred(s dstarlite.State) []dstarlite.State <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Pred(s dstarlite.State) []dstarlite.State</pre>
			<p>
Implements dstarlite.Data interface.
</p>

		</span>
	
		
		<h1 id="Data.Set" class="hdr pkg hdr-method"><a href="#Data.Set" title="permalink">»</a>&nbsp;func (d *Data) Set(pos Coord, value float64) <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Set(pos Coord, value float64)</pre>
			<p>
Set changes the cost of traversal to the given coordinate on the grid to the
specified value.
</p>
<p>
If the coordinate is outside of the grid&#39;s dimensions, an panic will occur.
</p>

		</span>
	
		
		<h1 id="Data.Size" class="hdr pkg hdr-method"><a href="#Data.Size" title="permalink">»</a>&nbsp;func (d *Data) Size() (width, height int) <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Size() (width, height int)</pre>
			<p>
Size returns the width and height of the grid.
</p>

		</span>
	
		
		<h1 id="Data.Start" class="hdr pkg hdr-method"><a href="#Data.Start" title="permalink">»</a>&nbsp;func (d *Data) Start() Coord <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Start() Coord</pre>
			<p>
Start returns the start coordinate, as it is currently.
</p>

		</span>
	
		
		<h1 id="Data.Succ" class="hdr pkg hdr-method"><a href="#Data.Succ" title="permalink">»</a>&nbsp;func (d *Data) Succ(s dstarlite.State) []dstarlite.State <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) Succ(s dstarlite.State) []dstarlite.State</pre>
			<p>
Implements dstarlite.Data interface.
</p>

		</span>
	
		
		<h1 id="Data.UpdateStart" class="hdr pkg hdr-method"><a href="#Data.UpdateStart" title="permalink">»</a>&nbsp;func (d *Data) UpdateStart(start Coord) <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg method">
			<pre>func (d *Data) UpdateStart(start Coord)</pre>
			<p>
UpdateStart updates the starting position. This can be used to move a long
the path efficiently.
</p>

		</span>
	



<h1 id="package-files" class="hdr pkg hdr-files"><a href="#package-files" title="permalink">»</a>&nbsp;Package Files <span class="toplink">(<a href="#top">top</a>)</span></h1>
<span class="section pkg files">
	<p>
	<a href="https:/github.com/azul3d/dstarlite-grid/blob/dev/grid.go" title="view source">grid.go</a>
	</p>

	<h2><span class="linkarea">(<a href="#" id="tagged-files-toggle">show tagged files</a>)</span></h2>
	<span id="tagged-files"></span>
</span>


<script>
$(function() {
	$("#tagged-files").slideUp();
	var toggle = true;
	$("#tagged-files-toggle").click(function(event) {
		event.preventDefault();
		toggle = !toggle;
		if(toggle) {
			$("#tagged-files").slideUp();
			$("#tagged-files-toggle").html("show tagged files");
		} else {
			$("#tagged-files").slideDown();
			$("#tagged-files-toggle").html("hide tagged files");
		}
	});
});
</script>

	</div>
</div>


<div id="footer">
	<div>© 2014 The Azul3D Authors, All Rights Reserved.</div>
	<div>Unless noted otherwise, the content of this page is licensed under the Creative Commons Attribution 3.0 License, and code is licensed under a BSD license.</div>
</div>


<script>
$(document).ready(function() {
	$("body").css("opacity", 0);

	 
	var ValidIpAddressRegex = "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$";
	var redirect = window.location.hostname != 'azul3d.org';
	if(location.hostname == "localhost" || location.hostname.search(ValidIpAddressRegex) != -1) {
		
		
		redirect = false;
	}
	if(redirect){
	    window.top.location.href = 'http://azul3d.org'; 
	}
});

$(window).ready(function() {
	var fadeIn = function(self, delay) {
		self.css("opacity", 0).delay(delay).animate({opacity: 1}, "slow");
	}

	var fromSameSite = document.referrer.indexOf(location.protocol + "//" + location.host) === 0;


	
	
	var longPage = $(document).height() > $(window).height() * 3;
	if(fromSameSite || longPage) {
		fadeIn($("body"), 10);
	} else {
		var workingIndex = 0;
		var speed = 75;
		$("#content").children().each(function(index) {
			fadeIn($(this), 1000 + (speed * workingIndex));
			workingIndex++;
			if($(this).hasClass("list")) {
				$(this).children().each(function(index) {
					fadeIn($(this), 1000 + (speed * workingIndex));
					workingIndex++;
				});
			}
		});

		var w = $("#shortbar").width();
		$("#shortbar").css({
			right: -w-1 + "px",
			opacity: 0
		}).delay(10).animate({
			right: "0px",
			opacity: 1
			}, "slow");

		var w = $("#navigation").width();
		$("#navigation").css({
			left: -w-1 + "px",
			opacity: 0
		}).delay(10).animate({
			left: "0px",
			opacity: 1
			}, "slow");

		fadeIn($("#logo"), 10);
		fadeIn($("body"), 10);
	}
})
</script>
	</body>
</html>



